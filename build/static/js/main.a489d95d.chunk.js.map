{"version":3,"sources":["logo.svg","router/r1.js","App.js","reportWebVitals.js","index.js"],"names":["Home","About","Topics","match","location","to","url","path","component","Topic","render","topicId","useParams","Routes","themes","light","foreground","background","dark","ThemeContext","createContext","displayName","ThemedButton","props","this","theme","context","style","backgroundColor","React","Component","contextType","App","toggleTheme","setState","state","hasError","error","errorInfo","console","log","className","src","logo","alt","dangerouslySetInnerHTML","__html","href","target","rel","Provider","value","Content","ThemeTogglerButton","Consumer","onClick","ErrorBoundary","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a489d95d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable no-unused-vars */\n\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n\n  Switch,\n  Route,\n\n  NavLink,\n  Redirect,\n  Link,\n\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Topics({ match, location, ...arf }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>\n            Props v. State\n          </Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch location={location}>\n        <Route path={`${match.path}/:topicId`} component={Topic} />\n        <Route path={match.path} render={() => (<h3>Please select a topic.</h3>)} />\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  let { topicId } = useParams();\n  return <h3>Requested topic ID: {topicId}</h3>;\n}\n\nfunction Routes() {\n  return <Router>\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/topics\">Topics</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/topics\" component={Topics}>\n          {/* <Topics /> */}\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n\n        {/* ? 确切匹配 */}\n        {/* <Route exact path=\"/\">\n          <Home />\n        </Route> */}\n      </Switch>\n    </div>\n  </Router>\n}\nexport default Routes","import React, { createContext } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Router from './router/r1'\n\nconst themes = {\n  light: {\n    foreground: '#000000',\n    background: '#eeeeee',\n  },\n  dark: {\n    foreground: '#ffffff',\n    background: '#222222',\n  },\n};\n\nconst ThemeContext = createContext(\n  themes.dark // 默认值\n);\n\nThemeContext.displayName = '辣鸡'\n\nclass ThemedButton extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    let props = this.props;\n    let theme = this.context;\n    return (\n      <button\n        {...props}\n        style={{ backgroundColor: theme.background }}\n      />\n    );\n  }\n}\n\n// function App() {\n//   // ? null/undefined/false 阻止渲染, 0 不行,会渲染 0 本身\n//   // if (true) return null\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <pre dangerouslySetInnerHTML={{ __html: `Edit <code>src/App.js</code> and save to reload` }} />\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n\n//         <Router ></Router>\n//       </header>\n//     </div>\n//   );\n// }\n\n// eslint-disable-next-line no-unused-vars\nfunction Toolbar(props) {\n  return (\n    <ThemedButton onClick={props.changeTheme}>\n      Change Theme\n    </ThemedButton>\n  );\n}\n\nclass App extends React.Component {\n  static getDerivedStateFromError(error) {\n    return { hasError: true }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme:\n          state.theme === themes.dark\n            ? themes.light\n            : themes.dark\n      }))\n    }\n\n    // State 也包含了更新函数，因此它会被传递进 context provider。\n    this.state = {\n      hasError: false,\n      theme: themes.light,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n\n\n  componentDidCatch(error, errorInfo) {\n    debugger\n    console.log(error, errorInfo);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <pre dangerouslySetInnerHTML={{ __html: `Edit <code>src/App.js</code> and save to reload` }} />\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n        </a>\n\n          <Router />\n\n          {/* <ThemeContext.Provider value={this.state.theme}>\n            <Toolbar changeTheme={this.toggleTheme} />\n\n\n            <ThemeContext.Consumer>\n              {(value) => (\n                <div>当前的颜色 {value.background}</div>\n              )}\n            </ThemeContext.Consumer>\n          </ThemeContext.Provider> */}\n\n          <ThemeContext.Provider value={this.state}>\n            <ErrorBoundary>\n              <Content />\n            </ErrorBoundary>\n          </ThemeContext.Provider>\n\n        </header>\n\n\n        {/* <Section>\n          <ThemedButton />\n        </Section> */}\n      </div>\n    );\n  }\n}\n\nfunction Content() {\n  return (\n    <div>\n      <ThemeTogglerButton />\n    </div>\n  );\n}\n\nclass ThemeTogglerButton extends React.Component {\n  render() {\n    // setTimeout(() => {\n    //   throw new Error('I crashed!');\n    // }, 3000)\n    return (\n      <ThemeContext.Consumer>\n        {({ theme, toggleTheme }) => (\n          <div>\n            <button\n              onClick={() => {\n                toggleTheme()\n              }}\n              style={{ backgroundColor: theme.background }}>\n              Toggle Theme\n              </button>\n  \n            <div>当前的颜色 {theme.background}</div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 使下一次渲染能够显示降级后的 UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 你同样可以将错误日志上报给服务器\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 你可以自定义降级后的 UI 并渲染\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}